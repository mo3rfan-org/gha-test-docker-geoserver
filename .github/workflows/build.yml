name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
    - name: Cache plugins
      uses: actions/cache@v3
      with:
        path: |
          ~/resources/geoserver-plugins
        key: ${{ runner.os }}-build-${{ hashFiles('**/geoserver-$GITHUB_REF_NAME-*-plugin.zip') }}

    - name: Validate build conditions
      env:
        NIGHTLY_MASTER_VERSION: ${{ vars.NIGHTLY_MASTER_VERSION }}
        NIGHTLY_STABLE_VERSION: ${{ vars.NIGHTLY_STABLE_VERSION }}
        NIGHTLY_MAINT_VERSION: ${{ vars.NIGHTLY_MAINT_VERSION }}
        STABLE_VERSION: ${{ vars.STABLE_VERSION }}
        MAINT_VERSION: ${{ vars.MAINT_VERSION }}
      run: |
        buildable_status=1
        versions=("$NIGHTLY_MASTER_VERSION" "$NIGHTLY_STABLE_VERSION" "$NIGHTLY_MAINT_VERSION" "$STABLE_VERSION" "$MAINT_VERSION")
        # We will proceed with the build only if the branch name is valid and supported by our repo-level vars.
        for version in "${versions[@]}"; do
          if [[ "$GITHUB_REF_NAME" == "$version" ]]; then
            # Valid version
            buildable_status=0
            break;
          fi
        done
        exit $buildable_status

    - name: Download dependencies
      env:
        PLUG_IN_LIST: "monitor control-flow libjpeg-turbo"
      run: |
        for version in $NIGHTLY_MASTER_VERSION; do
          if [[ "$GITHUB_REF_NAME" == $version ]]; then
            PLUG_IN_VERSION="2.$(expr $MIDDLE_STABLE + 1)-SNAPSHOT"
            break
          fi
        done
        if [ -z $PLUG_IN_VERSION ]; then
          for version in $NIGHTLY_STABLE_VERSION; do
            if [[ "$GITHUB_REF_NAME" == $version ]]; then
              PLUG_IN_VERSION="2.$MIDDLE_STABLE-SNAPSHOT"
              break
            fi
          done
        fi
        if [ -z $PLUG_IN_VERSION ]; then
          for version in $NIGHTLY_MAINT_VERSION; do
            if [[ "$GITHUB_REF_NAME" == $version ]]; then
              PLUG_IN_VERSION="2.$(expr $MIDDLE_STABLE - 1)-SNAPSHOT"
              break
            fi
          done
        fi
        
        if [ -z $PLUG_IN_VERSION ]; then
          for version in $STABLE_VERSION $MAINT_VERSION; do
            if [[ "$GITHUB_REF_NAME" == $version ]]; then
              PLUG_IN_VERSION="$version"
              break
            fi
          done
        fi

        mkdir -p ./resources/geoserver-plugins
        for PLUG_IN_NAME in $PLUG_IN_LIST; do
          URL="https://build.geoserver.org/geoserver/$GITHUB_REF_NAME/ext-latest/geoserver-$PLUG_IN_VERSION-$PLUG_IN_NAME-plugin.zip"
          curl -k -o ./resources/geoserver-plugins/geoserver-$PLUG_IN_VERSION-$PLUG_IN_NAME-plugin.zip $URL
        done

    - uses: actions/checkout@v4
    - name: Build the geoserver image
      env:
        DOCKER_REPO: geosolutionsit/geoserver
      run: |
        WAR_FILE="https://build.geoserver.org/geoserver/$GITHUB_REF_NAME/geoserver-$GITHUB_REF_NAME-latest-war.zip"
        docker build \
          --build-arg GEOSERVER_WEBAPP_SRC="$WAR_FILE" \
          --build-arg PLUG_IN_PATHS="./resources/geoserver-plugins" \
          -f "$DOCKERFILE_PATH" \
          -t "${DOCKER_REPO}:$GITHUB_REF_NAME" .
        rm -rf ./resources/geoserver-plugins/*
